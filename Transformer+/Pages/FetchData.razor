@page "/fetchdata"
@using Transformer_.Data.NASA
@inject NasaService NASAService
@inject ContextMenuService ContextMenuService

<PageTitle>Exoplanets</PageTitle>

<h1>Last Hundred Exoplanets Discovered.</h1>

<RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" SelectionMode="DataGridSelectionMode.Single"
    FilterPopupRenderMode="PopupRenderMode.OnDemand" @bind-Value=@selectedPlanets CellContextMenu="@OnCellContextMenu"
    AllowGrouping="true" AllowSorting="true" PageSize="20" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left"
    Data="@exoplanets" TItem="Exoplanet" LogicalFilterOperator="LogicalFilterOperator.Or" ShowPagingSummary="true"
    FilterMode="FilterMode.Advanced" IsLoading=@isLoading>
    <Columns>
        <RadzenDataGridColumn TItem="Exoplanet" Property="pl_name" Title="Name" Frozen="true"/>
        <RadzenDataGridColumn TItem="Exoplanet" Property="disc_year" Title="Year" />
        <RadzenDataGridColumn TItem="Exoplanet" Property="discoverymethod" Title="Method" />
        <RadzenDataGridColumn TItem="Exoplanet" Property="hostname" Title="Host Star" />
        <RadzenDataGridColumn TItem="Exoplanet" Property="disc_facility" Title="Facility" />
        <RadzenDataGridColumn TItem="Exoplanet" Property="disc_instrument" Title="Instrument" />
        <RadzenDataGridColumn TItem="Exoplanet" Title="Reference">
            <Template Context="exoplanet">
                @((MarkupString)exoplanet.pl_orbper_reflink)
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

@code {
    private IEnumerable<Exoplanet> exoplanets;
    private IList<Exoplanet> selectedPlanets;

    private bool isLoading => exoplanets == null;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        exoplanets = await NASAService.GetExoPlanetsAsync();
        selectedPlanets = exoplanets.Take(1).ToList();
    }

    void OnCellContextMenu(DataGridCellMouseEventArgs<Exoplanet> args)
    {
        selectedPlanets = new List<Exoplanet>() { args.Data };
        var contextMenu = new List<ContextMenuItem>();
        foreach (var planet in selectedPlanets)
        {
            contextMenu.Add(new ContextMenuItem() { Text = planet.pl_name, Value = planet.pl_name, Icon = "language" });
        }

        ContextMenuService.Open(args, contextMenu, 
            (e) => { 
                Console.WriteLine($"Planet {e.Value} clicked."); 
            });
    }
}
