@page "/"
@using Newtonsoft.Json;
@using Transformer_.Data.Animations;

<PageTitle>Home</PageTitle>

<RadzenStack AlignItems="AlignItems.Center">
    <Animation>
        <img src="/images/stoic-strategist.png" style="height: 300px" alt="stoic"/>
    </Animation>
    <RadzenText TextStyle="TextStyle.Subtitle1">@quote</RadzenText>
    <RadzenText TextStyle="TextStyle.Subtitle2">@author</RadzenText>
</RadzenStack>
<hr />
@if (flyBy)
{
    <Animation AnimationName=@AnimationName.zoomIn AnimationDuration="2000" AnimationDelay="0">
        <img src="/images/Autobots.png" alt="Autobots" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);"/>
    </Animation>
}
<RadzenCard Variant="Variant.Filled" Class="rz-mx-auto" Style="width: 50%">
    <RadzenText TextStyle="TextStyle.H6" TextAlign="TextAlign.Center">Button Playground</RadzenText>
    <hr />
    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.SpaceEvenly">
        <RadzenButton Variant="Variant.Outlined" Shade="Shade.Darker" Click="@GetContent" Text="Refresh Quote" ButtonStyle="ButtonStyle.Success"/>
        <RadzenButton Variant="Variant.Outlined" Shade="Shade.Lighter" Click="@Fly" Text="The Watcher" ButtonStyle="ButtonStyle.Primary" Disabled="@flyBy"/>
    </RadzenStack>
</RadzenCard>

@code {
    private string quote = "Seeking Wisdom...";
    private string author = "...";
    private bool flyBy { get; set; }

    private struct Content
    {
        public string Quote { get; set; }
        public string Author { get; set; }
    }

    protected override async Task OnInitializedAsync()
        => await GetContent();

    private async Task GetContent()
    {
        quote = "Seeking Wisdom...";
        author = "...";
        await Task.Delay(1000);
        try
        {
            using var client = new HttpClient();
            var response = await client.GetAsync("https://api.themotivate365.com/stoic-quote");
            if (response.IsSuccessStatusCode)
            {
                var json = await response.Content.ReadAsStringAsync();
                var content = JsonConvert.DeserializeObject<Content>(json);
                quote = content.Quote;
                author = content.Author;
            }
        }
        catch (Exception ex)
        {
            quote = "Sorry, No wisdom is forthcoming.";
            author = ex.Message;
        }
    }

    private async Task Fly()
    {
        flyBy = true;
        await Task.Delay(3000);
        flyBy = false;
    }
}
